dat1 <- read.csv(paste0(project, "/budget1.csv")), stringAsFactors = T
dat1 <- read.csv(paste0(project, "/budget1.csv")) stringAsFactors = T
View(dat2)
View(dat1)
dat1$person <- as.factor(dat1$person)
summary(dat1)
dat1$description <- as.factor(dat1$description)
summary(dat1)
summary(dat1$se)
summary(dat1$description)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidyr)
library (reshape2)
# initalize folders
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
dat2 <- read.csv(paste0(project, "/budget2.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
summary(dat1)
summary(dat1$description)
View(dat1)
dat1 <- read.csv(paste0(project, "/budget1.csv"))
dat2 <- read.csv(paste0(project, "/budget2.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
summary(dat1$description)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
View(dat1)
dat1 <- read.csv(paste0(project, "/budget1.csv"))
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
summary(dat1$description)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
summary(dat1$description)
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
summary(dat1)
exp_by_person <- dat1 %>%
group_by(person) %>%
summarise(expenditure)
exp_by_person <- dat1 %>%
group_by(person) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
View(exp_by_person)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
View(exp_by_person)
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
at1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
# load libraries
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidyr)
library (reshape2)
# initalize folders
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1$description <- ifelse(dat1$description == "snack", "snsacks", dat1$description)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
dat1$description <- ifelse(dat1$description = "snack", "snacks", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
dat1 <- read.csv(paste0(project, "/budget1.csv"))
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
dat1$description <-as.character(dat1$description)
dat1$description <- ifelse(dat1$description == "snack", "snacks", dat1$description)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
ben_coffee <- dat1 %>%
filter(person == "Ben" & details == "coffee")
View(ben_coffee)
ben_coffee <- dat1 %>%
filter(person == "Ben" & description == "coffee")
View(ben_coffee)
summary(ben_coffee$details)
ben_coffee$details <- as.factor(ben_coffee$details)
summary(ben_coffee$details)
for (i in ben_coffee$description) {
ben_coffee$cum_exp[ben_coffee$description == i] <- cumsum(ben_coffee$expenditure[ben_coffee$description == i])
print(i)
}
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 1) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 2) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee from Nov 2015- Nov 2016") +
ggtitle("Ben's Spending on Coffee") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 2) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee Nov 2015- Nov 2016") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 1) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee Nov 2015- Nov 2016") + theme_economist()
View(dat1)
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tidyr)
library(tmap)
library(raster) #to read in shapefile
library(sp)
#set working directory
setwd("/Users/xing/Documents/data_TO")
# import data
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
# remove unecessary columns
# dat1$X <- NULL
# round decimals
dat1$road_kms <- round(dat1$road_kms, digits = 2)
# add leading zeros to ID number to match map
dat1$neighbourhood_id[1:9] <- paste0("00", dat1$neighbourhood_id[1:9])
dat1$neighbourhood_id[10:99] <- paste0("0", dat1$neighbourhood_id[10:99])
# add new variables to dat1 (with percentages of certain variables)
dat1$percent_low_income <- round((dat1$low_income_population / dat1$total_population)*100, digits = 2)
dat1$percent_recent_imm <- round((dat1$recent_immigrant / dat1$total_population)*100, digits = 2)
dat1$perecent_visible_minority <- round((dat1$visible_minority / dat1$total_population)*100, digits = 2)
dat1$percent_unemployed <- round((dat1$unemployed / dat1$pop_15up)*100, digits = 2)
## MAPS ##
##### read in neighbourhoods shape file #####
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
## another option to read in shapefile
## map1 <- readOGR(dsn="/Users/xing/Documents/data_TO/maps", layer="NEIGHBORHOODS_UTM6")
# understand shapefile data
head(map)
# plot(map)
# map@data
# names(map)
# remove numbers, special characters, and spaces in neighbourhood area names
map$AREA_NAME <- gsub("[[:punct:]]", "", map$AREA_NAME)
map$AREA_NAME <- gsub("[[:digit:]]", "", map$AREA_NAME)
map$AREA_NAME <- gsub("[[:space:]]", "", map$AREA_NAME)
# rename neighbourhood_id to match maps in order to join
names(dat1)[names(dat1) == 'neighbourhood_id'] <- "AREA_S_CD"
# left_join dat1 to map
map@data <- left_join(map@data, dat1)
### to change map data into data.frame, use fortify() eg., map <- fortify(map)
map_f <- fortify(map)
# create a row with row ids in map so that can join with map_f (data.frame)
map$id <- row.names(map)
# join fortified map_f with map
map_f <- left_join(map_f, map@data)
# disable scientific notation
options(scipen = 999)
###
###
# load ttc map and fortify to make data.frame
ttc <- shapefile("/Users/xing/Documents/data_TO/maps/ttc/subway_wgs84.shp")
ttc_f <- fortify(ttc)
# load NIAs and fortify to make data.frame
nia <- shapefile("/Users/xing/Documents/data_TO/maps/nia.shp")
nia_f <- fortify(nia)
map_f$percent_low_income <- ifelse(map_f$percent_low_income > 60, 31, map_f$percent_low_income)
nnames <- aggregate(cbind(long, lat) ~ neighbourhood, data = map_f, FUN=function(x) mean(range(x)))
View(nnames)
# set working directory
setwd("/Users/xing/Documents/data_TO")
# import data
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
#### clean data.frame ####
# round decimals
dat1$road_kms <- round(dat1$road_kms, digits = 2)
# make column for percent of people that are visible minority, recent immigrants, low income population
dat1$percent_low_income <- round((dat1$low_income_population / dat1$total_population)*100, digits = 2)
dat1$percent_recent_imm <- round((dat1$recent_immigrant / dat1$total_population)*100, digits = 2)
dat1$perecent_visible_minority <- round((dat1$visible_minority / dat1$total_population)*100, digits = 2)
dat1$percent_unemployed <- round((dat1$unemployed / dat1$pop_15up)*100, digits = 2)
### simple regression with population and traffic collisions using ggplot2 ###
ggplot(dat1, aes(x=total_population, y=traffic_collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Traffic Collisions") +
ggtitle("Traffic Collisions vs. Total Population in Toronto Neighbourhoods")
### see outlier neighbourhoods with high traffic collisions
dat1$neighbourhood[dat1$traffic_collisions > 600]
View(dat1)
ggplot(dat1, aes(x=road_kms, y=traffic_collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Road Kms") +
ylab('Traffic Collisions') +
ggtitle("Road Kilometers vs. Traffic Collisions")
ggplot(dat1, aes(x=total_area, y=traffic_collisions)) +
geom_point(alpha = 0.6) +
geom_smooth(method=lm) +
labs("Total Area", "Traffic Collisions") +
ggtitle("Area v. Collisions")
ggplot(dat1, aes(x=total_area, y=traffic_collisions)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Area", "Traffic Collisions") +
ggtitle("Area v. Collisions")
mod1 <- lm(traffic_collisions ~ road_kms + total_population + total_area +
vehicle_thefts + walk_score, data = dat1)
mod1
summary(mod1)
mod1 <- lm(traffic_collisions ~ total_population + total_area +
vehicle_thefts + walk_score, data = dat1)
summary(mod1)
mean(dat1$traffic_collisions)
summary(dat1$traffic_collisions)
names(dat1)
mod1 <- lm(traffic_collisions ~ total_population + total_area + home_price +
vehicle_thefts + walk_score, data = dat1)
mod1
summary(mod1)
mod1 <- lm(traffic_collisions ~ total_population + total_area + home_price +
vehicle_thefts + avg_family_income, data = dat1)
mod1 <- lm(traffic_collisions ~ total_population + total_area + home_price +
vehicle_thefts + avg_fam_income, data = dat1)
summary(mod1)
mod1 <- lm(traffic_collisions ~ total_population + total_area + home_price +
vehicle_thefts + pop_15up, data = dat1)
summary(mod1)
# multivariate lineaar regressions using lm function
mod1 <- lm(traffic_collisions ~ total_area + home_price + vehicle_thefts + pop_15up, data = dat1)
summary(mod1)
ggplot(dat1, aes(x=vehicl_thefts, y=traffic_collisions)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Area", "Traffic Collisions") +
ggtitle("Area v. Collisions")
ggplot(dat1, aes(x=vehicle_thefts, y=traffic_collisions)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Area", "Traffic Collisions") +
ggtitle("Area v. Collisions")
ggplot(dat1, aes(x=vehicle_thefts[vehicle_thefts < 200], y=traffic_collisions)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Area", "Traffic Collisions") +
ggtitle("Area v. Collisions")
vehicle_thefts > 200
dat1$vehicle_thefts > 200
dat1$neighbourhood[dat1$vehicle_thefts > 200]
ggplot(dat1, aes(x=vehicle_thefts, y=traffic_collisions)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Area", "Traffic Collisions") +
ggtitle("Area v. Collisions")
dat2 <- dat1[dat1$vehicle_thefts < 200]
dat2 <- dat1[dat1$vehicle_thefts < 200,]
ggplot(dat2, aes(x=vehicle_thefts, y=traffic_collisions)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Area", "Traffic Collisions") +
ggtitle("Area v. Collisions")
ggplot(dat2, aes(x=vehicle_thefts, y=traffic_collisions)) +
geom_point(alpha = 0.6) +
geom_smooth(method=lm) +
labs("Total Area", "Traffic Collisions") +
ggtitle("Area v. Collisions")
ggplot(dat2, aes(x=total_population, y=vehichle_thefts)) +
geom_point(alpha = 0.6) +
geom_smooth(method=lm) +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
ggplot(dat2, aes(x=total_population, y=vehicle_thefts)) +
geom_point(alpha = 0.6) +
geom_smooth(method=lm) +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
ggplot(dat2, aes(x=pop_15up, y=vehicle_thefts)) +
geom_point(alpha = 0.6) +
geom_smooth(method=lm) +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
dat2$pop_dense <- dat2$total_population/dat2$total_area
ggplot(dat2, aes(x=pop_dense, y=vehicle_thefts)) +
geom_point(alpha = 0.6) +
geom_smooth(method=lm) +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
dat2$neighbourhood[dat2$pop_dense >40000]
ggplot(dat2, aes(x=pop_dense, y=home_price)) +
geom_point(alpha = 0.6) +
geom_smooth(method=lm) +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
ggplot(dat2, aes(x=pop_dense, y=home_price)) +
geom_point(alpha = 0.6) +
geom_smooth(method=log) +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
ggplot(dat2, aes(x=pop_dense, y=home_price)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
View(dat2)
dat2$pop_dense <- ifelse(dat2$pop_dense > 30000, 25000, dat2$pop_dense)
ggplot(dat2, aes(x=pop_dense, y=home_price)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
ggplot(dat2, aes(x=pop_dense, y=vehicle_thefts)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
dat2 <- dat1[dat1$vehicle_thefts < 200,]
ggplot(dat2, aes(x=total_population, y=vehicle_thefts)) +
geom_point(alpha = 0.6) +
geom_smooth() +
labs("Total Pop", "Veh Thefts") +
ggtitle("Pop vs Thefts")
