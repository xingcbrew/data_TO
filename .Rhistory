library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
# library(rgeos)
library(maptools)
library(tidyr)
# library(tmap)
# library(raster)
library(sp)
#set working directory
setwd("/Users/xing/Documents/data_TO")
# import data
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
# remove unecessary columns
# dat1$X <- NULL
# round decimals
dat1$road_kms <- round(dat1$road_kms, digits = 2)
# add leading zeros to ID number to match map
dat1$neighbourhood_id[1:9] <- paste0("00", dat1$neighbourhood_id[1:9])
dat1$neighbourhood_id[10:99] <- paste0("0", dat1$neighbourhood_id[10:99])
# add new variables to dat1 (with percentages of certain variables)
dat1$percent_low_income <- round((dat1$low_income_population / dat1$total_population)*100, digits = 2)
dat1$percent_recent_imm <- round((dat1$recent_immigrant / dat1$total_population)*100, digits = 2)
dat1$perecent_visible_minority <- round((dat1$visible_minority / dat1$total_population)*100, digits = 2)
dat1$percent_unemployed <- round((dat1$unemployed / dat1$pop_15up)*100, digits = 2)
dat1$percent_low_income
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
library(rgeos)
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
library(raster)
library(tidyrlibrary(tmap)
library(tmap)
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
?shapefile
names(dat1)[names(dat1) == 'neighbourhood_id'] <- "AREA_S_CD"
map@data <- left_join(map@data, dat1)
map_f <- fortify(map)
head(map_f)
head(map)
View(dat1)
map$id <- row.names(map)
map_f <- left_join(map_f, map@data)
View(dat1)
map_f <- fortify(map)
map@data
dat1$id <- row.names(dat1)
map_f <- left_join(map_f, dat1)
head(map_f)
map@data <- left_join(map@data, dat1)
map_f <- fortify(map)
map$id <- row.names(map)
map_f <- left_join(map_f, dat1)
ttc <- shapefile("/Users/xing/Documents/data_TO/ttc/subway_wgs84.shp")
ttc_f <- fortify(ttc)
# load NIAs and fortify to make data.frame
nia <- shapefile("/Users/xing/Documents/data_TO/maps/nia.shp")
nia_f <- fortify(nia)
###
###
ggplot(map_f, aes(long, lat, group = group, fill = total_population)) +
geom_polygon() +
theme_nothing(legend = T) + # if you want to have just the map with nothing else, plus legend
scale_fill_distiller(name = "Population", trans = "reverse") +
coord_equal() +
ggtitle("Neigbhourhoods by Population")
dat1$total_area
shelters <- shapefile("/Users/xing/Documents/data_TO/maps/shelters/shelters_wgs84.shp")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = lone_parent_families), # just change the fill
color = "transparent", size = 0.25) +
geom_point(data = shelters,
aes(x = long, y = lat))
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = lone_parent_families), # just change the fill
color = "transparent", size = 0.25) +
geom_polygon(data = shelters,
aes(x = long, y = lat))
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = lone_parent_families), # just change the fill
color = "transparent", size = 0.25) +
geom_polygon(data = shelters,
aes(x = long, y = lat))
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = lone_parent_families), # just change the fill
color = "transparent", size = 0.25) +
geom_point(data = shelters,
aes(x = long, y = lat))
ggplot() +
geom_point(data = shelters,
aes(x = long, y = lat))
geom_point(data = shelters,
aes(x = long, y = lat))
summary(shelters)
shelters
names(shelters)
shelters_f <- fortify(shelters)
shelters_f <- fortify(shelters)
shelters_f <- fortify(shelters)
shelters_f <- fortify(shelters)
shelters_f <- fortify(shelters)
plot(shelters)
names(shelters)
head(shelters)
shelters_f <- fortify(shelters)
plot(map) + plot(shelters)
plot(map) + plot(shelters, add = T)
plot(map) + plot(shelters, add = T, color = "blue")
shelters <- shapefile("/Users/xing/Documents/data_TO/maps/supportive_housing/supportive_housing_wgs84.shp")
plot(shelters)
shelters
shelters_f <- fortify(shelters)
get_map(toronto)
get_map(location = "toronto")
str(toronto)
geocode("toronto")
toronto <- geocode("toronto")
qmap(toronto, zoom = 14)
qmap(toronto, zoom = 14, source = osm)
?get_map
View(toronto)
get_map(location = c(long = -79.38318, lat = 43.65323))
?ggmap
toronto <- get_map(location = c(long = -79.38318, lat = 43.65323))
ggmap(toronto)
str(toronto)
toronto <- get_map(location = c(long = -79.38318, lat = 43.65323), zoom = 14)
ggmap(toronto)
toronto <- get_map(location = c(long = -79.38318, lat = 43.65323), zoom = 10, source = "stamen")
ggmap(toronto)
toronto <- get_map(location = c(long = -79.38318, lat = 43.65323), zoom = 10, source = "osm")
ggmap(toronto)
toronto <- get_map(location = c(long = -79.38318, lat = 43.65323), zoom = 10)
ggmap(toronto)
toronto <- get_map(location = c(long = -79.38318, lat = 43.65323), zoom = 12)
ggmap(toronto)
str(toronto)
toronto_f <- fortify(toronto)
t_bb <- make_bbox(toronto)
ggmap(toronto)
ggmap(toronto) +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "blue")
ggmap(toronto) +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "blue", fill = "transparent")
ggmap(toronto) +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "blue", fill = "transparent") +
geom_point(data = shelters)
shelters
shelters <- as.data.frame(shelters)
View(shelters)
View(map_f)
View(ttc_f)
View(shelters)
names(shelters)
shelters[10:11]
names(shelters[10:11,])
names(shelters[10:11])
names(shelters[10:11]) <- c("long", "lat")
View(shelters)
shelters[10:11]
shelters[,10:11]
colnames(shelters)[colnames(shelters)=="coords.x1"] <- "long"
colnames(shelters)[colnames(shelters)=="coords.x2"] <- "lat"
ggmap(toronto) +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "blue", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat))
ggmap(toronto) +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "blue", fill = "transparent")
ggmap(toronto) +
geom_point(data = shelters,
aes(x = long, y = lat))
View(shelters)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = lone_parent_families), # just change the fill
color = "transparent", size = 0.25) +
geom_point(data = shelters,
aes(x = long, y = lat))
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat))
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_point(data = shelters,
aes(x = long, y = lat))
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_point(data = shelters,
aes(x = long, y = lat)) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_point(data = shelters,
aes(x = long, y = lat),
color = "green", size = 3) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
shelters <- shapefile("/Users/xing/Documents/data_TO/data/shelters/shelters_wgs84.shp")
shelters <- shapefile("/Users/xing/Documents/data_TO/shelters/shelters_wgs84.shp")
shelters <- shapefile("/Users/xing/Documents/data_TO/maps/shelters/shelters_wgs84.shp")
shelters <- as.data.frame(shelters)
colnames(shelters)[colnames(shelters)=="coords.x1"] <- "long"
colnames(shelters)[colnames(shelters)=="coords.x2"] <- "lat"
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_point(data = shelters,
aes(x = long, y = lat),
color = "green", size = 3) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_point(data = shelters,
aes(x = long, y = lat),
color = "blue", alpha = 0.6, size = 2) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat),
color = "blue", alpha = 0.6, size = 2) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
names(shelters)
shelters <- shelters[, -c(1:13)] # delete columns 5 through 7
names(shelters)
shelters$CAPACITY <- ifelse(shelters$CAPACITY == "VARIES", na, shelters$CAPACITY)
shelters$CAPACITY <- ifelse(shelters$CAPACITY == "VARIES", NULL, shelters$CAPACITY)
shelters$CAPACITY <- ifelse(shelters$CAPACITY == "VARIES", 0, shelters$CAPACITY)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat),
color = "blue", alpha = 0.6, size = shelters$CAPACITY) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = shelters$CAPACITY),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = CAPACITY),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = CAPACITY),
color = "blue", alpha = 0.6) +
scale_size_continuous(range = c(0, 100)) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
shelters$capcitycat <- ifelse(shelters$CAPACITY >=0 & shelters$CITY_OP < 30, "0-30",
ifelse(shelters$CAPACITY >= 30 & shelters$CAPACITY < 60, "31-60",
ifelse(shelters$CAPACITY >= 60 & shelters$CAPACITY < 100, "61-100", "100+"))))
shelters$capcitycat <- ifelse(shelters$CAPACITY >=0 & shelters$CITY_OP < 30, "0-30",
ifelse(shelters$CAPACITY >= 30 & shelters$CAPACITY < 60, "31-60",
ifelse(shelters$CAPACITY >= 60 & shelters$CAPACITY < 100, "61-100", "100+")))
shelters$capcitycat <- ifelse(shelters$CAPACITY > 0 & shelters$CAPACITY < 30, "0-30",
ifelse(shelters$CAPACITY > 30 & shelters$CAPACITY < 60, "31-60",
ifelse(shelters$CAPACITY > 60 & shelters$CAPACITY < 100, "61-100", "100+")))
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capacitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
scale_fill_discrete(breaks=c("0-30","31-60","100+")) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, fill = capcitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, fill = capcitycat),
alpha = 0.6) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
scale_fill_discrete(breaks=c("0-30","31-60","100+")) +
ggtitle("Toronto Shelters")
shelters$capcitycat <- ifelse(shelters$CAPACITY > 0 & shelters$CAPACITY < 30, "small (<30)",
ifelse(shelters$CAPACITY > 30 & shelters$CAPACITY < 60, "med (31-60)",
ifelse(shelters$CAPACITY > 60 &
shelters$CAPACITY < 100, "61-100", " large (100+)")))
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
scale_fill_discrete(breaks=c("0-30","31-60","100+")) +
ggtitle("Toronto Shelters")
?scale_fill_manual
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
scale_fill_discrete(reverse = T) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
shelters$capcitycat <- ifelse(shelters$CAPACITY > 0 & shelters$CAPACITY < 30, "Asmall(<30)",
ifelse(shelters$CAPACITY > 30 & shelters$CAPACITY < 60, "Bmed(31-60)",
ifelse(shelters$CAPACITY > 60 &
shelters$CAPACITY < 100, "61-100", "Clarge(100+)")))
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat),
color = "blue", alpha = 0.6) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat, color = TYPE2)) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
places <- read.csv("/Users/xing/Documents/data_TO/data/places.csv")
View(places)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat, color = TYPE2)) +
geom_point(data = places,
aes(x = long, y = lat),
color = "orange", alpha = 0.6, size = 3) +
geom_text(data = places, aes(long, lat, label = place_name), size = 4) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelters")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat, color = TYPE2)) +
geom_point(data = places, # add ywca locations
aes(x = long, y = lat), size = 3) +
geom_text(data = places, aes(long, lat, label = place_name), size = 4) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelter Locations")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent") +
geom_point(data = shelters,
aes(x = long, y = lat, size = capcitycat, color = TYPE2)) +
geom_point(data = places, # add ywca locations
aes(x = long, y = lat),
color = "orange", alpha = 0.4, size = 3) +
geom_text(data = places, aes(long, lat, label = place_name), size = 4) +
theme_nothing(legend = TRUE) +
ggtitle("Toronto Shelter Locations")
