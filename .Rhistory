library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tidyr)
library(tmap)
library(raster)
#set working directory
setwd("/Users/xing/Documents/data_TO")
# import data
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/housing_traffic.csv")
# remove unecessary columns
dat1$Neighbourhood.Id <- NULL
dat1$Combined.Indicators <- NULL
# round decimals
dat1$Social.Housing.Turnover <- round(dat1$Social.Housing.Turnover, digits = 2)
# read in neighbourhoods shape file
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
## another option to read in shapefile
## map1 <- readOGR(dsn="/Users/xing/Documents/data_TO/maps", layer="NEIGHBORHOODS_WGS84")
# understand shapefile data
head(map)
plot(map)
map@data
names(map)
head(dat1$Total.Population)
# remove numbers, special characters, and spaces in neighbourhood area names
map$AREA_NAME <- gsub("[[:punct:]]", "", map$AREA_NAME)
map$AREA_NAME <- gsub("[[:digit:]]", "", map$AREA_NAME)
map$AREA_NAME <- gsub("[[:space:]]", "", map$AREA_NAME)
dat1$Neighbourhood <- gsub("[[:punct:]]", "", dat1$Neighbourhood)
dat1$Neighbourhood <- gsub("[[:space:]]", "", dat1$Neighbourhood)
large_pop$Neighbourhood <- gsub("[[:space:]]", "", large_pop$Neighbourhood)
large_pop$Neighbourhood <- gsub("[[:punct:]]", "", large_pop$Neighbourhood)
#sort alphabetically
# dat1 <- dat1[order(dat1$Neighbourhood), ]
# map$AREA_NAME <- map[order(map$AREA_NAME), ]
# large_pop$Neighbourhood <- large_pop[order(large_pop$Neighbourhood), ]
# make a new dataset with population >20000
ggplot(dat1, aes(x=Home.Prices, y=Traffic.Collisions)) +
geom_point(shape=1)
ggplot(dat1, aes(x=Total.Population, y=Traffic.Collisions)) +
geom_point(shape=1)
ggplot(dat1, aes(x=Total.Population, y=Traffic.Collisions)) +
geom_point() +
geom_smooth(method=lm)
ggplot(dat1, aes(x=Total.Population, y=Traffic.Collisions)) +
geom_point(colour=blue, alpha=0.6) +
geom_smooth(method=lm)
ggplot(dat1, aes(x=Total.Population, y=Traffic.Collisions)) +
geom_point(color=blue, alpha=0.6) +
geom_smooth(method=lm)
ggplot(dat1, aes(x=Total.Population, y=Traffic.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm)
ggplot(dat1, aes(x=Total.Population, y=Traffic.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Traffic Collisions") +
ggtitle("Traffic Collisions vs. Total Population in Toronto Neighbourhoods")
dat1$Traffic.Collisions[dat1$Traffic.Collisions > 600]
dat1$Neighbourhood[dat1$Traffic.Collisions > 600]
ggplot(dat1, aes(x=Total.Population, y=Pedestrian.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Traffic Collisions") +
ggtitle("Traffic Collisions vs. Total Population in Toronto Neighbourhoods")
ggplot(dat1, aes(x=Total.Population, y=Pedestrian.Other.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Pedestrian and Other Collisions") +
ggtitle("Pedestrian and other Collisions vs. Total Population in Toronto Neighbourhoods")
dat1$Neighbourhood[dat1$Pedestrian.Other.Collisions > 750]
ggplot(dat1, aes(x=Social.Housing.Waiting.List, y=Pedestrian.Other.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Pedestrian and Other Collisions") +
ggtitle("Pedestrian and other Collisions vs. Total Population in Toronto Neighbourhoods")
ggplot(dat1, aes(x=Home.Prices, y=Social.Housing.Turnover)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
ggplot(dat1, aes(x=Home.Prices, y=Social.Housing.Turnover)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm)
ggplot(dat1, aes(x=Home.Prices, y=Social.Housing.Waiting.List)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm)
ggplot(dat1, aes(x=Home.Prices, y=Social.Housing.Waiting.List)) +
geom_point(alpha=0.6) +
geom_smooth()
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/housing_traffic.csv")
# remove unecessary columns
dat1$Neighbourhood.Id <- NULL
dat1$Combined.Indicators <- NULL
# round decimals
dat1$Social.Housing.Turnover <- round(dat1$Social.Housing.Turnover, digits = 2)
### simple regression with population and traffic collisions using ggplot2 ###
ggplot(dat1, aes(x=Total.Population, y=Traffic.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Traffic Collisions") +
ggtitle("Traffic Collisions vs. Total Population in Toronto Neighbourhoods")
### see outlier neighbourhoods with high traffic collisions
dat1$Neighbourhood[dat1$Traffic.Collisions > 600]
### population vs pedestrian collisions
ggplot(dat1, aes(x=Total.Population, y=Pedestrian.Other.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Pedestrian and Other Collisions") +
ggtitle("Pedestrian and other Collisions vs. Total Population in Toronto Neighbourhoods")
dat1$Neighbourhood[dat1$Pedestrian.Other.Collisions > 750]
dat1$Neighbourhood[dat1$Pedestrian.Other.Collisions > 700]
ggplot(dat1, aes(x=Total.Population, y=Pedestrian.Other.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth() +
xlab("Neighbourhood Population") +
ylab("Pedestrian and Other Collisions") +
ggtitle("Pedestrian and other Collisions vs. Total Population in Toronto Neighbourhoods")
ggplot(dat1, aes(x=Total.Population, y=Pedestrian.Other.Collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Pedestrian and Other Collisions") +
ggtitle("Pedestrian and other Collisions vs. Total Population in Toronto Neighbourhoods")
dat1$Neighbourhood[dat1$Pedestrian.Other.Collisions > 700]
head(map)
map@data
names(map)
head(dat1$Total.Population)
merge <- merge(large_pop, map, by = "AREA_NAME")
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
View(dat1)
dat1$X <- NULL
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
View(dat1)
dat1$road_kms <- round(dat1$road_kms, digits = 2)
ggplot(dat1, aes(x=total_population, y=traffic_colissions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Traffic Collisions") +
ggtitle("Traffic Collisions vs. Total Population in Toronto Neighbourhoods")
ggplot(dat1, aes(x=total_population, y=traffic_collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Traffic Collisions") +
ggtitle("Traffic Collisions vs. Total Population in Toronto Neighbourhoods")
ggplot(dat1, aes(x=total_population, y=pedes_collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Pedestrian and Other Collisions") +
ggtitle("Pedestrian and other Collisions vs. Total Population in Toronto Neighbourhoods")
ggplot(dat1, aes(x=total_population, y=pedes_colissions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Neighbourhood Population") +
ylab("Pedestrian and Other Collisions") +
ggtitle("Pedestrian and other Collisions vs. Total Population in Toronto Neighbourhoods")
ggplot(dat1, aes(x=road_kms, y=traffic_collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm)
ggplot(dat1, aes(x=road_kms, y=pedes_colissions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm)
ggplot(dat1, aes(x=road_kms, y=traffic_collisios)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm)
ggplot(dat1, aes(x=road_kms, y=traffic_collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Road Kms") +
ylab('Traffic Collisions') +
ggtitble("Road Kilometers vs. Traffic Collisions")
ggplot(dat1, aes(x=road_kms, y=traffic_collisions)) +
geom_point(alpha=0.6) +
geom_smooth(method=lm) +
xlab("Road Kms") +
ylab('Traffic Collisions') +
ggtitle("Road Kilometers vs. Traffic Collisions")
rm(map)
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
head(map)
plot(map)
map@data
dat1$neighbourhood_id <- paste0("0", dat1$neighbourhood_id)
View(dat1)
dat1$neighbourhood_id <- paste0("0", dat1$neighbourhood_id[1:9,])
dat1$neighbourhood_id <- paste0("0", dat1$neighbourhood_id[1:9],)
dat1$neighbourhood_id <- paste0("0", dat1$neighbourhood_id[1:9])
dat1$neighbourhood_id[1:9,] <- paste0("0", dat1$neighbourhood_id[1:9,])
dat1$neighbourhood_id[,1:9] <- paste0("0", dat1$neighbourhood_id[,1:9])
dat1$neighbourhood_id[1:9,] <- paste0("0", dat1$neighbourhood_id[1:9,])
dat1$neighbourhood_id[1:9,]
dat1$neighbourhood_id[1:9]
dat1$neighbourhood_id[1:9] <- paste0("0", dat1$neighbourhood_id[1:9])
View(dat1)
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
# remove unecessary columns
dat1$X <- NULL
dat1$road_kms <- round(dat1$road_kms, digits = 2)
dat1$neighbourhood_id[1:9] <- paste0("00", dat1$neighbourhood_id[1:9])
dat1$neighbourhood_id[10:99] <- paste0("0", dat1$neighbourhood_id[10:99])
View(dat1)
names(map)
map@data
map$AREA_NAME <- gsub("[[:punct:]]", "", map$AREA_NAME)
map@data
name(dat1$neighbourhood_id)
colnames(dat1$neighbourhood_id)
colnames(dat1[2])
colnames(dat1[2]) <- c("AREA_S_CD")
View(dat1)
colnames(dat1[2]) <- "AREA_S_CD"
View(dat1)
names(dat1)[names(dat1) == 'neighbourhod_id'] <- "AREA_S_CD"
View(dat1)
names(dat1)[names(dat1) == 'neighbourhod_id'] <- "AREA_S_CD"
names(dat1)[names(dat1) == 'neighbourhood_id'] <- "AREA_S_CD"
View(dat1)
merge <- merge(large_pop, map, by = "AREA_S_CD")
merge <- merge(dat1, map, by = "AREA_S_CD")
View(merge)
merge@data
map@data[map@total_population > 10000,]
print(map)
mat <- as.matrix(dat1)
View(mat)
sp <- SpatialPoints(coords = mat)
rm(mat)
head(map@name)
map@data <- left_join(map@data, dat1)
map@data[map@total_population > 10000,]
map@data[dat1$otal_population > 10000,]
print(map)
map@data
head(map@data)
library(tmap)
qtm(shp=map, fill=total_population, fill.palette="-Blues")
qtm(shp = map, fill = "total_population", fill.palette = "-Blues")
qtm(shp = map, fill = "home_price", fill.palette = "Reds")
qtm(shp = map, fill = "traffic_collisions", fill.palette = "Greens")
qtm(shp = map, fill = "total_population", fill.palette = "Blues")
