geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
# load libraries
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidyr)
library (reshape2)
# initalize folders
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1$description <- ifelse(dat1$description == "snack", "snsacks", dat1$description)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
dat1$description <- ifelse(dat1$description = "snack", "snacks", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
dat1 <- read.csv(paste0(project, "/budget1.csv"))
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
dat1$description <-as.character(dat1$description)
dat1$description <- ifelse(dat1$description == "snack", "snacks", dat1$description)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
ben_coffee <- dat1 %>%
filter(person == "Ben" & details == "coffee")
View(ben_coffee)
ben_coffee <- dat1 %>%
filter(person == "Ben" & description == "coffee")
View(ben_coffee)
summary(ben_coffee$details)
ben_coffee$details <- as.factor(ben_coffee$details)
summary(ben_coffee$details)
for (i in ben_coffee$description) {
ben_coffee$cum_exp[ben_coffee$description == i] <- cumsum(ben_coffee$expenditure[ben_coffee$description == i])
print(i)
}
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 1) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 2) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee from Nov 2015- Nov 2016") +
ggtitle("Ben's Spending on Coffee") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 2) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee Nov 2015- Nov 2016") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 1) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee Nov 2015- Nov 2016") + theme_economist()
View(dat1)
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tidyr)
library(tmap)
library(raster) #to read in shapefile
library(sp)
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tidyr)
library(tmap)
library(raster) #to read in shapefile
library(sp)
#set working directory
setwd("/Users/xing/Documents/data_TO")
# import data
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/housing_prices.csv")
View(dat1)
dat1$X < NULL
View(dat1)
summary(dat1)
str(dat1)
dat1$X <- NULL
melt(dat1, id.vars = 'district')
temp <- melt(dat1, id.vars = 'district')
View(temp)
temp <- melt(dat1, id.vars = c('district, neighbourhood_ids'))
dat1$neighbourhood_ids <- NULL
temp <- melt(dat1, id.vars = c('district'))
View(temp)
dat1 <- dat1[complete.cases(dat1),]
View(dat1)
temp <- melt(dat1, id.vars = c('district'))
View(temp)
levels(temp$variable)
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/housing_prices.csv")
dat1$X <- NULL
# rm cols not needed for melting
dat1$neighbourhood_ids <- NULL
dat1$change_2015_2016 <- NULL
dat1$change_2012_2016 <- NULL
# remove rows that have at least na
dat1 <- dat1[complete.cases(dat1),]
temp <- melt(dat1, id.vars = c('district'))
View(temp)
ggplot(data = temp, aes(x=variable, y=value)) +
geom_line(color = district) +
labels("Month", "House Price")
?geom_line
ggplot(data = temp, aes(x=variable, y=value)) +
geom_line(colour = district) +
labels("Month", "House Price")
ggplot(data = temp, aes(x=variable, y=value)) +
geom_line() +
labels("Month", "House Price")
ggplot(data = temp, aes(x=variable, y=value)) +
geom_line()
?geom_line
ggplot(data = temp, aes(x=variable, y=value)) +
geom_line(aes(colour=district))
ggplot(data = temp, aes(x=variable, y=value, group=district)) +
geom_line()
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_line()
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_line() +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts")
str(temp)
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_line() +
geom_smooth() +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts")
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_line() +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts")
?abline
?geom_line
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_path() +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts")
?geom_line
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_smooth() +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts")
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_smooth(se=F) +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts")
temp$variable <- ifelse(temp$variable == "june_2012", "June 2012",
ifelse(temp$variable == "dec_2012", "Dec 2012",
ifelse(temp$variable == "june_2013", "June 2013", temp$variable)))
temp <- melt(dat1, id.vars = c('district'))
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_smooth(se=F) +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts") +
scale_x_discrete(breaks=c("june_2012", "dec_2012", "june_2013", "dec_2013", "june_2014", "dec_2014",
"june_2015", "dec_2015", "june_2016", "nov_2016"),
labels=c("06/2012", "12/2012", "06/2013", "12/2013", "06/2014", "12/2014", "06/2015",
"12/2015", "06/2016", "11/2016"))
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/housing_prices.csv")
dat1$X <- NULL
View(dat1)
ggplot(data = dat1, aes(x=dsitrict, y=change_2012_2016, group=district)) +
geom_bar(stat = identity) +
labs("District", "Percentage Change 2012-2016")
ggplot(data = dat1, aes(x=dsitrict, y=change_2012_2016, group=district)) +
geom_bar(stat = "identity") +
labs("District", "Percentage Change 2012-2016")
ggplot(data = dat1, aes(x=district, y=change_2012_2016, group=district)) +
geom_bar(stat = "identity") +
labs("District", "Percentage Change 2012-2016")
ggplot(data = dat1, aes(x=reorder(district, -change_2012_2016) y=change_2012_2016, group=district)) +
geom_bar(stat = "identity") +
labs("District", "Percentage Change 2012-2016")
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016) y=change_2012_2016, group=district)) +
geom_bar(stat = "identity") +
labs("District", "Percentage Change 2012-2016")
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016) y=change_2012_2016, group=district)) +
geom_bar(stat = "identity")
dat1 <- dat1[complete.cases(dat1),]
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016) y=change_2012_2016, group=district)) +
geom_bar(stat = "identity")
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity") +
labs("District", "Percentage Change 2012-2016")
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity") +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Price, 2012-16")
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity", colour = "blue", alpha = 0.6) +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Price, 2012-16")
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.6) +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Price, 2012-16")
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.6) +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Price, 2012-16") +
theme_economist()
library(ggthemes)
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.6) +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Price, 2012-16") +
theme_economist()
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity") +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Price, 2012-16") +
theme_economist()
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_smooth(se=F) +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts") +
scale_x_discrete(breaks=c("june_2012", "dec_2012", "june_2013", "dec_2013", "june_2014", "dec_2014",
"june_2015", "dec_2015", "june_2016", "nov_2016"),
labels=c("06/2012", "12/2012", "06/2013", "12/2013", "06/2014", "12/2014", "06/2015",
"12/2015", "06/2016", "11/2016")) +
theme_economist()
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_smooth(se=F) +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts") +
scale_x_discrete(breaks=c("june_2012", "dec_2012", "june_2013", "dec_2013", "june_2014", "dec_2014",
"june_2015", "dec_2015", "june_2016", "nov_2016"),
labels=c("06/2012", "12/2012", "06/2013", "12/2013", "06/2014", "12/2014", "06/2015",
"12/2015", "06/2016", "11/2016")) +
theme_wsj()
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_smooth(se=F) +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts") +
scale_x_discrete(breaks=c("june_2012", "dec_2012", "june_2013", "dec_2013", "june_2014", "dec_2014",
"june_2015", "dec_2015", "june_2016", "nov_2016"),
labels=c("06/2012", "12/2012", "06/2013", "12/2013", "06/2014", "12/2014", "06/2015",
"12/2015", "06/2016", "11/2016")) +
theme_void()
ggplot(data = temp, aes(x=variable, y=value, group=district, colour=district)) +
geom_smooth(se=F) +
xlab("Month/Year") +
ylab("House Price") +
ggtitle("Toronto House Prices by MLS District") +
scale_color_discrete(name = "Districts") +
scale_x_discrete(breaks=c("june_2012", "dec_2012", "june_2013", "dec_2013", "june_2014", "dec_2014",
"june_2015", "dec_2015", "june_2016", "nov_2016"),
labels=c("06/2012", "12/2012", "06/2013", "12/2013", "06/2014", "12/2014", "06/2015",
"12/2015", "06/2016", "11/2016")) +
theme_minimal()
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity") +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Average House Prices, 2012-2016") +
theme_minimal
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity") +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Average House Prices, 2012-2016") +
theme_igray()
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity") +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Average House Prices, 2012-2016") +
theme_few()
ggplot(data = dat1, aes(x=reorder(district, change_2012_2016), y=change_2012_2016)) +
geom_bar(stat = "identity") +
xlab("District") +
ylab("Percentage Increase in Price") +
ggtitle("Percent of Increase in Average House Prices, 2012-2016") +
theme_economist_white()
n <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
View(n)
n <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
View(n)
dat1$neighbourhood_id[1:9] <- paste0("00", dat1$neighbourhood_id[1:9])
dat1$neighbourhood_id[10:99] <- paste0("0", dat1$neighbourhood_id[10:99])
n$neighbourhood_id[1:9] <- paste0("00", dat1$neighbourhood_id[1:9])
n$neighbourhood_id[10:99] <- paste0("0", dat1$neighbourhood_id[10:99])
View(n)
View(n)
n <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
n$neighbourhood_id[1:9] <- paste0("00", n$neighbourhood_id[1:9])
n$neighbourhood_id[10:99] <- paste0("0", n$neighbourhood_id[10:99])
View(n)
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
names(n)[names(n) == 'neighbourhood_id'] <- "AREA_S_CD"
map@data <- left_join(map@data, n)
map_f <- fortify(map)
map$id <- row.names(map)
map_f <- left_join(map_f, map@data)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = "transparent"),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, fill = district),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = "white),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = "white"),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25) +
scale_fill_discrete()
cols = rainbow(35, s=.6, v=.9)[sample(1:35,35)]
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25) +
scale_fill_discrete(manual=cols)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25) +
scale_fill_manual(values = cols)
?rainbow
cols = rainbow(35, s=.3, v=.4, alpha=0.5)[sample(1:35,35)]
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25) +
scale_fill_manual(values = cols)
cols = rainbow(35, s=.6, v=.6, alpha=0.5)[sample(1:35,35)]
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25) +
scale_fill_manual(values = cols)
?rainbow
?palette
cols = rainbow(35, s=.6, v=.6, alpha=0.5)
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25) +
scale_fill_manual(values = cols)
cols = palette(35, s=.6, v=.8, alpha=0.6)[sample(1:35,35)]
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25) +
scale_fill_manual(values = cols)
cols = rainbow(35, s=.6, v=.8, alpha=0.6)[sample(1:35,35)]
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = district),
color = "transparent", size = 0.25) +
scale_fill_manual(values = cols)
?rgeos
library(rgeos)
?rgeos
