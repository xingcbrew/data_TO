xlab("Province") +
ylab("Number of Refugees") +
ggtitle("Syrian Refugees Admitted to Canada between\nNov 2015-Sept 2016 by Type of Sponsorship") +
scale_fill_manual(name="Type of Sponsorship", labels=c("Blended", "Government-Assisted", "Privately Sponsored", "Unstated"),
values=c("#A9DFBF", "#73C6B6", "#ABB2B9", "#85929E")) +
theme_fivethirtyeight()
### Notes about data ###
# Data are preliminary estimates and are subject to change.
# Syrian refugees include persons processed under Canada’s Syrian refugee resettlement commitment.
# Source: IRCC, September 30, 2016 Data
# http://open.canada.ca/data/en/dataset/ca243c40-a6d3-4a46-a578-b4fad4369df0
# read in data about refugee education levels
dat2 <- read.csv("/Users/xing/Documents/data_TO/data/refugee_education.csv")
# plot cumulative sum of refugees by year
dat2_m <- melt(dat2, id.vars="education")
dat_year <- dat2_m %>%
group_by(variable) %>%
summarise(total = sum(value))
dat_year$cumsum <- cumsum(dat_year$total)
dat_year$variable <- gsub("X", "", dat_year$variable)
dat_year$variable <- as.numeric(dat_year$variable)
ggplot(dat_year, aes(x=variable, y=cumsum)) +
geom_point() +
geom_line() +
xlab("Year") +
ylab("Number of Refugees") +
ggtitle("Cumulative Number of Refugees Admitted to Canada\nbetween 2011-2016") +
theme_fivethirtyeight()
# make bar plot showing level of education of refugees by year
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
# compare government resettled refugees vs refugee claims
dat3 <- read.csv("/Users/xing/Documents/data_TO/data/refugee_claims.csv")
##Source:  IRCC (EDW) of May 08, 2016
##* "Other" includes: other countries, stateless, unknown, missing and/or invalid data
# make df with Total refugee claims
dat3_tot <- dat3[dat3$Category == "Total",]
View(dat3_tot)
dat3_m <- melt(dat3_tot, id.vars = "Category")
View(dat3_m)
dat3_m$variable <- gsub("X", "", dat3_m$variable)
View(dat3_m)
View(dat3_m)
dat3_m <- dat3_m[-c(6), ]
View(dat3_m)
dat3_m <- dat3_m[-c(6,7), ]
View(dat3_m)
dat3_m$variable <- as.numeric(dat3_m$variable)
dat3_m$cumsum <- cumsum(dat3_m$value)
View(dat3_m)
View(dat2_m)
View(dat3)
View(dat2_m)
View(dat_year)
?cbind
?left_join
r_tot <- left_join(dat_year, dat3_m, by = "variable")
View(r_tot)
r_tot <- r_tot[,-c("total", "Category", "value")]
r_tot <- r_tot[-c,("total", "Category", "value")]
r_tot$total <- NULL
r_tot$Category <- NULL
r_tot$value <- NULL
View(r_tot)
r_tot_m <- melt(r_tot, id.vars = "variable")
View(r_tot_m)
ggplot(r_tot_m, aes(variable, value)) +
geom_line()
dat3 <- read.csv("/Users/xing/Documents/data_TO/data/refugee_claims.csv")
##Source:  IRCC (EDW) of May 08, 2016
##* "Other" includes: other countries, stateless, unknown, missing and/or invalid data
# make df with Total refugee claims
dat3_tot <- dat3[dat3$Category == "Total",]
dat3_m <- melt(dat3_tot, id.vars = "Category")
dat3_m$variable <- gsub("X", "", dat3_m$variable)
colnames(dat3_m)[2] <- c("year")
dat3_m <- dat3_m[-c(6,7), ]
dat3_m$variable <- as.numeric(dat3_m$variable)
dat3_m$year <- as.numeric(dat3_m$year)
dat3_m$cumsum <- cumsum(dat3_m$value)
View(dat3_m)
View(dat_year)
dat3 <- read.csv("/Users/xing/Documents/data_TO/data/refugee_claims.csv")
##Source:  IRCC (EDW) of May 08, 2016
##* "Other" includes: other countries, stateless, unknown, missing and/or invalid data
# make df with Total refugee claims
dat3_tot <- dat3[dat3$Category == "Total",]
dat3_m <- melt(dat3_tot, id.vars = "Category")
dat3_m$variable <- gsub("X", "", dat3_m$variable)
dat3_m <- dat3_m[-c(6,7), ]
dat3_m$variable <- as.numeric(dat3_m$variable)
dat3_m$cumsum <- cumsum(dat3_m$value)
r_tot <- left_join(dat_year, dat3_m, by = "variable")
r_tot$total <- NULL
r_tot$Category <- NULL
r_tot$value <- NULL
r_tot_m <- melt(r_tot, id.vars = "variable")
ggplot(r_tot_m, aes(variable, value, color=variable)) +
geom_line()
colnames(r_tot_m)[1] <- "year"
View(r_tot_m)
ggplot(r_tot_m, aes(year, value, color=variable)) +
geom_line()
View(dat3)
ggplot(r_tot_m, aes(year, value, color=variable)) +
geom_line() +
xlab("Year") +
ylab("Number of Refugees") +
ggtitle("Government Supported vs. Refugee Claimants")
ggplot(r_tot_m, aes(year, value, color=variable)) +
geom_line() +
xlab("Year") +
ylab("Number of Refugees") +
ggtitle("Government Supported vs. Refugee Claimants") +
scale_color_manual(name="Type of Refugee", labels=c("Government Admitted", "Refugee Claimants"))
ggplot(r_tot_m, aes(year, value, color=variable)) +
geom_line() +
xlab("Year") +
ylab("Number of Refugees") +
ggtitle("Government Supported vs. Refugee Claimants") +
scale_color_manual(name="Type of Refugee", labels=c("Government Admitted", "Refugee Claimants"),
values=c("red", "blue"))
ggplot(r_tot_m, aes(year, value, color=variable)) +
geom_line() +
xlab("Year") +
ylab("Number of Refugees") +
ggtitle("Government Supported vs. Refugee Claimants") +
scale_color_manual(name="Type of Refugee", labels=c("Government Admitted", "Refugee Claimants"),
values=c("red", "blue")) +
theme_fivethirtyeight()
ggplot(r_tot_m, aes(year, value, color=variable)) +
geom_line() +
xlab("Year") +
ylab("Number of Refugees") +
ggtitle("Government Supported vs. Refugee Claimants") +
scale_color_manual(name="Type of Refugee", labels=c("Government Admitted", "Refugee Claimants"),
values=c("#73C6B6", "#ABB2B9")) +
theme_fivethirtyeight()
View(dat_year)
library(ggplot2)
library(dplyr)
library(tidyr)
library(reshape2)
library(ggthemes)
# read in syrian refugee data
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/syrian_refugees.csv")
# make bar graphs showing number of refugees by province
temp <- dat1 %>%
select(province, gender, total) %>%
filter(province != "CAN" & province != "unstated")
ggplot(temp, aes(x=province, y=total, fill=gender)) +
geom_bar(stat='identity') +
xlab("Province") +
ylab("Number of Refugees") +
ggtitle("Syrian Refugees Admitted to Canada\nby Province between Nov 2015-Sept 2016") +
scale_fill_manual(name="Gender", labels=c("Female", "Male"), values=c("#FF5733", "#FFC300")) +
theme_fivethirtyeight()
temp2 <- dat1 %>%
select(province, blended, government, private, unstated) %>%
filter(province != "CAN" & province !="unstated")
temp2_m <- melt(temp2, id.vars = "province")
ggplot(temp2_m, aes(x=province, y=value, fill=variable)) +
geom_bar(stat="identity") +
xlab("Province") +
ylab("Number of Refugees") +
ggtitle("Syrian Refugees Admitted to Canada between\nNov 2015-Sept 2016 by Type of Sponsorship") +
scale_fill_manual(name="Type of Sponsorship", labels=c("Blended", "Government-Assisted", "Privately Sponsored", "Unstated"),
values=c("#A9DFBF", "#73C6B6", "#ABB2B9", "#85929E")) +
theme_fivethirtyeight()
### Notes about data ###
# Data are preliminary estimates and are subject to change.
# Syrian refugees include persons processed under Canada’s Syrian refugee resettlement commitment.
# Source: IRCC, September 30, 2016 Data
# http://open.canada.ca/data/en/dataset/ca243c40-a6d3-4a46-a578-b4fad4369df0
# read in data about refugee education levels
dat2 <- read.csv("/Users/xing/Documents/data_TO/data/refugee_education.csv")
# plot cumulative sum of refugees by year
dat2_m <- melt(dat2, id.vars="education")
dat_year <- dat2_m %>%
group_by(variable) %>%
summarise(total = sum(value))
dat_year$cumsum <- cumsum(dat_year$total)
dat_year$variable <- gsub("X", "", dat_year$variable)
dat_year$variable <- as.numeric(dat_year$variable)
ggplot(dat_year, aes(x=variable, y=cumsum)) +
geom_point() +
geom_line() +
xlab("Year") +
ylab("Number of Refugees") +
ggtitle("Cumulative Number of Refugees Admitted to Canada\nbetween 2011-2016") +
theme_fivethirtyeight()
# make bar plot showing level of education of refugees by year
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
# compare government resettled refugees vs refugee claims
dat3 <- read.csv("/Users/xing/Documents/data_TO/data/refugee_claims.csv")
##Source:  IRCC (EDW) of May 08, 2016
##* "Other" includes: other countries, stateless, unknown, missing and/or invalid data
# make df with Total refugee claims
dat3_tot <- dat3[dat3$Category == "Total",]
dat3_m <- melt(dat3_tot, id.vars = "Category")
dat3_m$variable <- gsub("X", "", dat3_m$variable)
dat3_m <- dat3_m[-c(6,7), ]
dat3_m$variable <- as.numeric(dat3_m$variable)
dat3_m$cumsum <- cumsum(dat3_m$value)
r_tot <- left_join(dat_year, dat3_m, by = "variable")
r_tot$total <- NULL
r_tot$Category <- NULL
r_tot$value <- NULL
r_tot_m <- melt(r_tot, id.vars = "variable")
colnames(r_tot_m)[1] <- "year"
ggplot(r_tot_m, aes(year, value, color=variable)) +
geom_line() +
xlab("Year") +
ylab("Number of Refugees") +
ggtitle("Government Supported vs. Refugee Claimants") +
scale_color_manual(name="Type of Refugee", labels=c("Government Admitted", "Refugee Claimants"),
values=c("#73C6B6", "#ABB2B9")) +
theme_fivethirtyeight()
levels(r_tot_m)
levels(r_tot_m$value)
summary(r_tot_m)
str(r_tot_m)
str(dat2_m)
levels(dat2_m$education)
dat2_m$education <- factor(dat2_m$education, levels = "None ","Secondary or Less", "Formal Trade Cert. or Apprenticeship",
"Non-University Certificate or Diploma", "Some University - No Degree","Bachelor's Degree",
"Some Post-Grad. Education - No Degree", "Master's Degree", "Doctorate", "Unknown")
dat2_m$education <- factor(dat2_m$education, levels = c("None ","Secondary or Less", "Formal Trade Cert. or Apprenticeship",
"Non-University Certificate or Diploma", "Some University - No Degree","Bachelor's Degree",
"Some Post-Grad. Education - No Degree", "Master's Degree", "Doctorate", "Unknown"))
levels(dat2_m)
levels(dat2_m$education)
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education, order=-as.numeric(education))) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education, order=-as.numeric(education))) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education, order=(education))) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education, order=as.numeric(education))) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education, order=-as.numeric(education))) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
order(dat2_m)
order(dat2_m$education)
dat2_m$education
ggplot(data = dat2_m, aes(x=variable, y=value, fill=education, order=education)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
ggplot(data = dat2_m[order(dat2_m$eduation),], aes(x=variable, y=value, fill=education)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
ggplot(data = dat2_m[order(dat2_m$education),], aes(x=variable, y=value, fill=education)) +
geom_bar(stat="identity") +
xlab("Year") +
ylab("Number of Refugees Admitted") +
ggtitle("Education Level of Refugees Admitted into Canada\nbetween 2011 and Sept 2016") +
scale_fill_hue(name="Education Level") +
scale_x_discrete(labels=c("X2011" = "2011", "X2012" = "2012", "X2013" = "2013", "X2014" = "2014",
"X2015" = "2015", "X2016" = "Jan-Sept 2016")) +
theme_fivethirtyeight()
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tidyr)
library(tmap)
library(raster) #to read in shapefile
library(sp)
#set working directory
setwd("/Users/xing/Documents/data_TO")
# import data
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
# remove unecessary columns
# dat1$X <- NULL
# round decimals
dat1$road_kms <- round(dat1$road_kms, digits = 2)
# add leading zeros to ID number to match map
dat1$neighbourhood_id[1:9] <- paste0("00", dat1$neighbourhood_id[1:9])
dat1$neighbourhood_id[10:99] <- paste0("0", dat1$neighbourhood_id[10:99])
# add new variables to dat1 (with percentages of certain variables)
dat1$percent_low_income <- round((dat1$low_income_population / dat1$total_population)*100, digits = 2)
dat1$percent_recent_imm <- round((dat1$recent_immigrant / dat1$total_population)*100, digits = 2)
dat1$perecent_visible_minority <- round((dat1$visible_minority / dat1$total_population)*100, digits = 2)
dat1$percent_unemployed <- round((dat1$unemployed / dat1$pop_15up)*100, digits = 2)
## MAPS ##
##### read in neighbourhoods shape file #####
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
## another option to read in shapefile
## map1 <- readOGR(dsn="/Users/xing/Documents/data_TO/maps", layer="NEIGHBORHOODS_UTM6")
# understand shapefile data
head(map)
# plot(map)
# map@data
# names(map)
# remove numbers, special characters, and spaces in neighbourhood area names
map$AREA_NAME <- gsub("[[:punct:]]", "", map$AREA_NAME)
map$AREA_NAME <- gsub("[[:digit:]]", "", map$AREA_NAME)
map$AREA_NAME <- gsub("[[:space:]]", "", map$AREA_NAME)
# rename neighbourhood_id to match maps in order to join
names(dat1)[names(dat1) == 'neighbourhood_id'] <- "AREA_S_CD"
# left_join dat1 to map
map@data <- left_join(map@data, dat1)
### to change map data into data.frame, use fortify() eg., map <- fortify(map)
map_f <- fortify(map)
# create a row with row ids in map so that can join with map_f (data.frame)
map$id <- row.names(map)
# join fortified map_f with map
map_f <- left_join(map_f, map@data)
# disable scientific notation
options(scipen = 999)
###
###
# load ttc map and fortify to make data.frame
ttc <- shapefile("/Users/xing/Documents/data_TO/maps/ttc/subway_wgs84.shp")
ttc_f <- fortify(ttc)
# load NIAs and fortify to make data.frame
nia <- shapefile("/Users/xing/Documents/data_TO/maps/nia.shp")
nia_f <- fortify(nia)
###
###
######## plot map data using ggplot2 ##########
plot <- ggplot(map@data, aes(traffic_collisions, walk_score))
plot + geom_point()
# resize and recolour each point by different variables
plot + geom_point(aes(colour=home_price, size=total_population)) +
ggtitle("Walk Score vs. Traffic Collisions by Neighbourhood")
# adding text to the plot
plot + geom_point(aes(colour = home_price, size = total_population)) +
geom_text(size = 2, aes(label = AREA_NAME))
###
###
###### making a map using ggplot2 #####
map3 <- ggplot(map_f, aes(long, lat, group = group, fill = vehicle_thefts)) +
geom_polygon() +
theme_nothing(legend = T) + # if you want to have just the map with nothing else, plus legend
scale_fill_distiller(name = "Population", trans = "reverse") +
coord_equal() +
ggtitle("Neigbhourhoods by Population")
# type map3 to show map
### to add text to the map ###
cnames <- aggregate(cbind(long, lat) ~ neighbourhood, data = map_f, FUN=function(x) mean(range(x)))
map4 <- ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = total_population),
color = "transparent", size = 0.25) +
coord_map() +
scale_fill_distiller(name = "Population", trans = "reverse") +
theme_nothing(legend = TRUE) +
labs(title="Neighbourhoods by Population") +
geom_text(data=cnames, aes(long, lat, label = neighbourhood), size=2)
# map showing population choropleth, highlighting NIAs, with ttc line
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = total_population),
color = "transparent", size = 0.25) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "transparent", alpha = 0.5) +
geom_path(data = ttc_f,
aes(x = long, y = lat, group = group)) +
coord_map() +
scale_fill_distiller(name = "Population", trans = "reverse") +
theme_nothing(legend = TRUE) +
labs(title="Neighbourhoods by Population")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = low_income_population), # just change the fill
color = "transparent", size = 0.25) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "grey", alpha = 0.3) +
geom_path(data = ttc_f,
aes(x = long, y = lat, group = group)) +
coord_map() +
scale_fill_distiller(name = "Low Income",
trans = "reverse") +
theme_nothing(legend = TRUE) +
labs(title="Low Income")
ywca <- read.csv("/Users/xing/Documents/data_TO/data/ywca.csv")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = lone_parent_families), # just change the fill
color = "transparent", size = 0.25) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent",
show.legend = T) +
geom_path(data = ttc_f,
aes(x = long, y = lat, group = group)) +
geom_point(data = ywca,
aes(x = long, y = lat),
color = "orange", alpha = 0.6, size = 3) +
geom_text(data = ywca, aes(long, lat, label = place_name), size = 3, nudge_y = .005) +
coord_map() +
scale_fill_distiller(name = "Lone Parent Families", palette = 1, # choose colour scheme using palette
trans = "reverse") +
theme_nothing(legend = TRUE) +
ggtitle("YWCA Toronto Locations")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = lone_parent_families), # just change the fill
color = "transparent", size = 0.25) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent",
show.legend = T) +
geom_path(data = ttc_f,
aes(x = long, y = lat, group = group)) +
geom_point(data = ywca,
aes(x = long, y = lat),
color = "orange", alpha = 0.6, size = 3) +
geom_text(data = ywca, aes(long, lat, label = place_name), size = 3, nudge_y = .005) +
coord_map() +
scale_fill_distiller(name = "Lone Parent Families", palette = 1, # choose colour scheme using palette
trans = "reverse") +
scale_color_manual(name="NIA", values = "yellow")
theme_nothing(legend = TRUE) +
ggtitle("YWCA Toronto Locations")
ggplot() +
geom_polygon(data = map_f,
aes(x = long, y = lat, group = group, fill = lone_parent_families), # just change the fill
color = "transparent", size = 0.25) +
geom_polygon(data = nia_f,
aes(x = long, y = lat, group = group),
color = "yellow", fill = "transparent",
show.legend = T) +
geom_path(data = ttc_f,
aes(x = long, y = lat, group = group)) +
geom_point(data = ywca,
aes(x = long, y = lat),
color = "orange", alpha = 0.6, size = 3) +
geom_text(data = ywca, aes(long, lat, label = place_name), size = 3, nudge_y = .005) +
coord_map() +
scale_fill_distiller(name = "Lone Parent Families", palette = 1, # choose colour scheme using palette
trans = "reverse") +
scale_color_manual(name="NIA", values = "yellow") +
theme_nothing(legend = TRUE) +
ggtitle("YWCA Toronto Locations")
