geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
#change vacation into travel ### ?????
#dat1$description <- ifelse(dat1$description == "vacation", "travel", dat1$description)
dat1$description <- ifelse(dat1$description = "snack", "snacks", dat1$description)
#let's see how much each person spent
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
dat1 <- read.csv(paste0(project, "/budget1.csv"))
home <- "/Users/xing"
project <- paste0(home, "/Desktop/Budget_R/Data")
# read csv
dat1 <- read.csv(paste0(project, "/budget1.csv"))
# function to get rid of whitespaces
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
dat1$person <- trim(dat1$person)
dat1$description <- trim(dat1$description)
dat1$details <- trim(dat1$details)
# change date format
dat1$date <- as.Date(dat1$date, format = "%m/%d/%Y")
#change columns into factors
dat1$person <- as.factor(dat1$person)
dat1$description <- as.factor(dat1$description)
#summary of dat1 descriptions
summary(dat1$description)
dat1$description <-as.character(dat1$description)
dat1$description <- ifelse(dat1$description == "snack", "snacks", dat1$description)
dat1$description <- as.factor(dat1$description)
summary(dat1$description)
exp_by_person <- dat1 %>%
group_by(person, description) %>%
summarise(exp_person = sum(expenditure), na.rm = T)
#plotted
ggplot(exp_by_person, aes(person, exp_person, group = description, fill = description)) +
geom_bar(stat = "identity", alpha = 0.6) +
xlab("Person") + ylab("Expenditure") + ggtitle("Spending by Person Nov 4, 2015 - Nov 5, 2016") +
theme_economist()
ben_coffee <- dat1 %>%
filter(person == "Ben" & details == "coffee")
View(ben_coffee)
ben_coffee <- dat1 %>%
filter(person == "Ben" & description == "coffee")
View(ben_coffee)
summary(ben_coffee$details)
ben_coffee$details <- as.factor(ben_coffee$details)
summary(ben_coffee$details)
for (i in ben_coffee$description) {
ben_coffee$cum_exp[ben_coffee$description == i] <- cumsum(ben_coffee$expenditure[ben_coffee$description == i])
print(i)
}
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 1) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 2) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee from Nov 2015- Nov 2016") +
ggtitle("Ben's Spending on Coffee") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 2) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee Nov 2015- Nov 2016") + theme_economist()
ggplot(ben_coffee, aes(x=date, y=cum_exp)) +
geom_line(size = 1) +
xlab("Date") +
ylab("Cumulative Expenditure on Coffee") +
ggtitle("Ben's Spending on Coffee Nov 2015- Nov 2016") + theme_economist()
View(dat1)
library(ggplot2)
library(dplyr)
library(reshape2)
library(ggmap)
library(rgdal)
library(rgeos)
library(maptools)
library(tidyr)
library(tmap)
library(raster) #to read in shapefile
library(sp)
#set working directory
setwd("/Users/xing/Documents/data_TO")
# import data
dat1 <- read.csv("/Users/xing/Documents/data_TO/data/wellbeing_toronto.csv")
# remove unecessary columns
# dat1$X <- NULL
# round decimals
dat1$road_kms <- round(dat1$road_kms, digits = 2)
# add leading zeros to ID number to match map
dat1$neighbourhood_id[1:9] <- paste0("00", dat1$neighbourhood_id[1:9])
dat1$neighbourhood_id[10:99] <- paste0("0", dat1$neighbourhood_id[10:99])
# add new variables to dat1 (with percentages of certain variables)
dat1$percent_low_income <- round((dat1$low_income_population / dat1$total_population)*100, digits = 2)
dat1$percent_recent_imm <- round((dat1$recent_immigrant / dat1$total_population)*100, digits = 2)
dat1$perecent_visible_minority <- round((dat1$visible_minority / dat1$total_population)*100, digits = 2)
dat1$percent_unemployed <- round((dat1$unemployed / dat1$pop_15up)*100, digits = 2)
## MAPS ##
##### read in neighbourhoods shape file #####
map <- shapefile("/Users/xing/Documents/data_TO/maps/NEIGHBORHOODS_WGS84.shp")
## another option to read in shapefile
## map1 <- readOGR(dsn="/Users/xing/Documents/data_TO/maps", layer="NEIGHBORHOODS_UTM6")
# understand shapefile data
head(map)
plot(map)
map@data
names(map)
# remove numbers, special characters, and spaces in neighbourhood area names
map$AREA_NAME <- gsub("[[:punct:]]", "", map$AREA_NAME)
map$AREA_NAME <- gsub("[[:digit:]]", "", map$AREA_NAME)
map$AREA_NAME <- gsub("[[:space:]]", "", map$AREA_NAME)
# rename neighbourhood_id to match maps in order to join
names(dat1)[names(dat1) == 'neighbourhood_id'] <- "AREA_S_CD"
# left_join dat1 to map
map@data <- left_join(map@data, dat1)
### to change map data into data.frame, use fortify() eg., map <- fortify(map)
map_f <- fortify(map)
# create a row with row ids in map so that can join with map_f (data.frame)
map$id <- row.names(map)
# join fortified map_f with map
map_f <- left_join(map_f, map@data)
# disable scientific notation
options(scipen = 999)
###
###
# load ttc map and fortify to make data.frame
ttc <- shapefile("/Users/xing/Documents/data_TO/maps/ttc/subway_wgs84.shp")
ttc_f <- fortify(ttc)
# load NIAs and fortify to make data.frame
nia <- shapefile("/Users/xing/Documents/data_TO/maps/nia.shp")
nia_f <- fortify(nia)
###
###
install.packages("leaflet")
install.packages("leaflet")
library(leaflet)
addTiles()
m <- leaflet()
m %>%
setView(lon = -79.38318, lat= 43.65323, zoom = 12)
m %>%
setView(lon = -79.38318, lat= 43.65323, zoom = 12)
?setView
m <- leaflet() setView(lon = -79.38318, lat= 43.65323, zoom = 12)
m <- leaflet() setView(lng = -79.38318, lat= 43.65323, zoom = 12)
m <- leaflet() %>% setView(lng = -79.38318, lat= 43.65323, zoom = 12)
m %>% addTiles()
m %>% addProviderTiles("Stamen.Toner")
m %>% addProviderTiles("Stamen.Watercolor")
m %>% addProviderTiles("CartoDB.Positron")
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35))
%>% addProviderTiles("Stamen.TonerLabels"))
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35)) %>%
addProviderTiles("Stamen.TonerLabels"))
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35)) %>%
addProviderTiles("Stamen.TonerLabels"))
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35))
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35))
%>% addProviderTiles("Stamen.TonerLabels")
shelters <- shapefile("/Users/xing/Documents/data_TO/maps/shelters/shelters_wgs84.shp")
shelters <- as.data.frame(shelters)
# clean shelters data.frame
# delete uneeded columns
shelters <- shelters[, -c(1:13)] # delete columns 5 through 7
colnames(shelters)[colnames(shelters)=="coords.x1"] <- "long"
colnames(shelters)[colnames(shelters)=="coords.x2"] <- "lat"
View(shelters)
m <- leaflet(data = shelters) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 12)
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35)) %>%
addMarkers(shelters)
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35)) %>%
addMarkers(~long, ~lat, popup = ~as.character(mag))
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35)) %>%
addMarkers(~long, ~lat, popup = ~as.character(mag))
View(shelters)
m %>% addProviderTiles("Stamen.TonerLines", options = providerTileOptions(opacity = 0.35)) %>%
addMarkers(~long, ~lat, popup = ~as.character(NAME))
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addMarkers(~long, ~lat, popup = ~as.character(NAME))
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME), clusterOptions = markerClusterOptions())
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME))
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
color = ~pal(TYPE2),
stroke = FALSE, fillOpacity = 0.5)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5)
pal <- colorFactor(c("blue", "red", "green", "orange", "yellow"), domain = c("Single Men", "Single Women",
"Mixed Adult", "Family", "Youth"))
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2))
View(nia_f)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addPolygons(stroke = FALSE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("YlOrRd", nia_f)(nia_f)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addPolygons(stroke = FALSE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("YlOrRd", nia_f)(nia_f))
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addPolygons(stroke = FALSE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("YlOrRd", nia)(nia))
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addPolygons(stroke = FALSE, fillOpacity = 0.5, smoothFactor = 0.5)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2))
m %>%
addPolygons(stroke = FALSE, fillOpacity = 0.5, smoothFactor = 0.5)
?addPolygons
m %>% addPolylines(nia, opacity = 0.5, smoothFactor = 1)
m %>% addPolylines(nia_f, lng = "long", lat = "lat", opacity = 0.5, smoothFactor = 1)
m %>% addPolygons(nia_f, lng = "long", lat = "lat", opacity = 0.5, smoothFactor = 1)
m %>% addPolygons(nia_f, lng = long, lat = lat, opacity = 0.5, smoothFactor = 1)
m %>% addPolygons(nia_f, lng = nia_f$long, lat = nia_f$lat, opacity = 0.5, smoothFactor = 1)
m %>% addPolygons(nia_f, lng = nia_f$long, lat = nia_f$lat, opacity = 0.5)
m %>% addPolygons(nia_f, lng = nia_f$long, lat = nia_f$lat, stroke = F, opacity = 0.5)
m %>% addPolylines(nia_f, lng = nia_f$long, lat = nia_f$lat, stroke = F, opacity = 0.5
m %>% addPolylines(nia_f, lng = nia_f$long, lat = nia_f$lat, stroke = F, opacity = 0.5)
m
summary(m)
leaflet(m) %>%
addPolygons(stroke = F, opacity = 0.5)
leaflet(m) %>%
addPolygons(stroke = F, opacity = 0.5, data = nia_f)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addTiles(map) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2))
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2))
View(shelters)
View(map_f)
leaflet(nia_f)
n <- leaflet(nia_f)
n
n <- leaflet(nia_f) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 12)
n
n <- leaflet(ttc_f) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 12)
n
m <- leaflet(data = shelters) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 12)
m
m <- leaflet(data = shelters) %>% setView(lng = -79.38318, lat= 43.65323, zoom = 12)
m
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2))
n %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35))
n %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addPolygons(nia_f)
n %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addPolygons(nia_f, lng = long, lat = lat)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2))
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = ~TYPE,
title = "Type of Shelter",
labFormat = labelFormat(prefix = "$"),
opacity = 1)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = ~pal,
title = "Type of Shelter",
opacity = 1)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 1)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(NAME),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
?labformat
?labelFormat
?addCircleMarkers
lab <- paste(sep = "<br/>",
"shelters$NAME<br/>",
"shelters$CAPACITY")
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
lab <- paste(sep = "<br/>",
shelters$NAME"<br/>",
shelters$CAPACITY)
lab <- paste(shelters$NAME,shelters$CAPACITY)
lab <- paste(shelters$NAME, shelters$CAPACITY)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
lab <- paste(shelters$NAME, <br>shelters$CAPACITY)
lab <- paste(shelters$NAME, <br/>shelters$CAPACITY)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
lab <- paste(shelters$NAME, shelters$CAPACITY "spaces")
lab <- paste(shelters$NAME, shelters$CAPACITY)
lav
lab
lab <- cat(shelters$NAME\nshelters$CAPACITY)
lab <- cat(shelters$NAME, shelters$CAPACITY)
lab <- cat(shelters$NAME, shelters$CAPACITY)
?paste
lab <- paste(shelters$NAME, shelters$CAPACITY, sep = " ",m collapse = NULL)
lab <- paste(shelters$NAME, shelters$CAPACITY, sep = " ", collapse = NULL)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
lab <- paste(shelters$NAME, shelters$CAPACITY, sep = ", ")
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
?paste
lab <- paste(shelters$NAME shelters$CAPACITY, sep = ", No. of spots:")
lab <- paste(shelters$NAME, shelters$CAPACITY, sep = ", No. of spots:")
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
lab <- paste(shelters$NAME, shelters$CAPACITY, sep = ", No. of spots: ")
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
?paste
lab <- paste(shelters$NAME, shelters$CAPACITY, shelters$family, sep = ", No. of beds: ")
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
lab <- paste(shelters$NAME, shelters$CAPACITY, shelters$type, sep = ", ", collapse = T)
?paste
lab <- paste(shelters$NAME, shelters$CAPACITY, shelters$type, sep = ", ")
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
lab <- paste(shelters$NAME, shelters$CAPACITY, shelters$TYPE, sep = ", ")
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
lab <- paste(shelters$NAME, shelters$CAPACITY, shelters$TYPE, sep = ",
")
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
places <- read.csv("/Users/xing/Documents/data_TO/data/places.csv")
View(places)
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addMarkers(data = places, ~long, ~lat, popup = ~as.character(place_name),
radius = 5, fillOpacity = 0.5, color = blue) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
View(places)
?addMarkers
m %>% addProviderTiles("Stamen.Toner", options = providerTileOptions(opacity = 0.35)) %>%
addCircleMarkers(~long, ~lat, popup = ~as.character(lab),
radius = ~ifelse(CAPACITY > 0 & CAPACITY < 50, 6, 10),
stroke = FALSE, fillOpacity = 0.5,
color = ~pal(TYPE2)) %>%
addMarkers(data = places, ~long, ~lat, popup = ~as.character(place_name),
radius = 5, fillOpacity = 0.5, color = blue) %>%
addLegend("bottomright", pal = pal, values = shelters$TYPE2,
title = "Type of Shelter",
opacity = 0.5)
View(places)
places_s <- SpatialLines(places)
places_s <- SpatialPoints(places)
places_s <- SpatialPointsDataFrame(places)
?SpatialPointsDataFrame
places_s <- as.SpatialPointsDataFrame(places)
SpatialPointsDataFrame(places)
