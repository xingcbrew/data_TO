if(Sys.info()['user'] == 'xingchiu'){
data <- 'C:\Users\Xing Chiu\Documents\data_TO'
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
if(Sys.info()['user'] == 'xingchiu'){
data <- 'C:/Users/Xing Chiu/Documents/data_TO'
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
Sys.info()
if(Sys.info()['user'] == 'Xing Chiu'){
data <- 'C:/Users/Xing Chiu/Documents/data_TO'
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
read.csv('toronto data.csv')
read.csv('toronto_data.csv')
if(Sys.info()['user'] == 'Xing Chiu'){
data <- 'C:\Users\Xing Chiu\Documents\data_TO'
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
if(Sys.info()['user'] == 'Xing Chiu'){
data <- '~C:\Users\Xing Chiu\Documents\data_TO'
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
if(Sys.info()['user'] == 'Xing Chiu'){
data <- 'C:\Users\Xing Chiu\Documents\data_TO\'
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
Sys.info()['user'] == 'Xing Chiu'
if(Sys.info()['user'] == 'Xing Chiu'){
data <- 'C:\Users\Xing Chiu\Documents\data_TO\'
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
if(Sys.info()['user'] == 'Xing Chiu'){
data <- "'C:\Users\Xing Chiu\Documents\data_TO\'"
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
if(Sys.info()['user'] == 'Xing Chiu'){
data <- "'C:/Users/Xing Chiu/Documents/data_TO/'"
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
setwd(data)
if(Sys.info()['user'] == 'Xing Chiu'){
data <- "C:/Users/Xing Chiu/Documents/data_TO"
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
setwd(data)
read.csv('toronto_data')
read.csv('toronto_data.csv')
Sys.info()
dat <- read.csv('toronto_data.csv')
head(dat)
head(dat)
dat$Neighbourhood.Id <- NULL
dat$Combined.Indicators <- NULL
dat
colnames(dat)
colnames(dat) <- tolower(colnames(dat))
colnames(dat)
?gsub
temp <- gsub(".","_",colnames(dat))
temp
temp <- gsub(".","_",colnames(dat), fixed = TRUE)
temp
colnames(dat) <- gsub(".","_",colnames(dat), fixed = TRUE)
rm(temp)
colnames(dat)[6] <- "unemployed"
colnames(dat)
str(dat)
any(is.na(dat))
hist(dat$low_income_families)
summary(dat$low_income_families)
hist(dat$low_income_families, breaks = 20,
col = "green",
xlab = "Number of Low Income Families",
mian = "Distribution of Low Income Fmilies")
abline(v = dat$low_income_families[which(dat$neighbourhood == "Malvern")],
col = "red")
hist(dat$low_income_families, breaks = 20,
col = "green",
xlab = "Number of Low Income Families",
main = "Distribution of Low Income Fmilies")
abline(v = dat$low_income_families[which(dat$neighbourhood == "Malvern")],
col = "red")
dat$low_income_families[which(dat$neighbourhood == "Malvern")
)
dat$low_income_families[which(dat$neighbourhood == "Malvern")]
summary(dat$low_income_families)
colnames(dat)
dat$per_low_family <- (dat$low_income_families/dat$total_population)*100
dat$per_low_family
dat$per_low_family <- round(dat$per_low_family, 2)
dat$per_low_family
summary(dat$per_low_family)
hist(dat$per_low_family)
dat$cat_low_family <- ifelse(dat$per_low_family > median(dat$per_low_family), "rich", "poor")
dat$cat_low_family
summary(dat$per_low_family)
dat$cat_low_family <- ifelse(dat$per_low_family > 13.06, "rich",
ifelse(dat$per_low_family > 8.235 &
dat$per_low_family <= 13.06, "medium", "poor"))
View(dat)
dat$cat_low_family <- ifelse(dat$per_low_family > 13.06, "poor",
ifelse(dat$per_low_family > 8.235 &
dat$per_low_family <= 13.06, "medium", "rich"))
view(dat)
View(dat)
if(Sys.info()['user'] == 'Xing Chiu'){
data <- "C:/Users/Xing Chiu/Documents/data_TO"
} else if(Sys.info()['user'] == 'benbrew'){
data <- '/home/benbrew/Documents/data_TO'
}
setwd(data)
dat <- read.csv('toronto_data.csv')
## delete unecessary columns
dat$Neighbourhood.Id <- NULL
dat$Combined.Indicators <- NULL
## make column names lower case
colnames(dat) <- tolower(colnames(dat))
## clean col names more
colnames(dat) <- gsub(".","_",colnames(dat), fixed = TRUE)
colnames(dat)[6] <- "unemployed"
## check if there are any NAs
any(is.na(dat))
## make histogram
hist(dat$low_income_families)
summary(dat$low_income_families)
hist(dat$low_income_families, breaks = 20,
col = "green",
xlab = "Number of Low Income Families",
main = "Distribution of Low Income Fmilies")
abline(v = dat$low_income_families[which(dat$neighbourhood == "Malvern")],
col = "red")
summary(dat$low_income_families)
## make new variable of percent of total population that is low income families
dat$per_low_family <- (dat$low_income_families/dat$total_population)*100
# round to nearest 10th
dat$per_low_family <- round(dat$per_low_family, 2)
## create new categorial variable based on dat$per_low_family
## cut off at median
dat$cat_low_family <- ifelse(dat$per_low_family > 13.06, "poor",
ifelse(dat$per_low_family > 8.235 &
dat$per_low_family <= 13.06, "medium", "rich"))
## make variable for percentage of total population that is low income
dat$per_low_population <- (dat$low_income_population/dat$total_population)*100
dat$per_low_population <- round(dat$per_low_population, 2)
## create new categorical variable based on dat$per_low_population
dat$cat_low_population <- ifelse(dat$per_low_population > 27.10, "poor",
ifelse(dat$per_low_population > 14.16 &
dat$per_low_population <= 27.10, "medium","rich"))
## make variable for percentage pf visible minority
dat$per_vis_min <- (dat$visible_minority_category/dat$total_population)*100
dat$per_vis_min <- round(dat$per_vis_min, 2)
## create category for visible minority in neighbourhoods
dat$cat_vis_min <- ifelse(dat$per_vis_min > 63.50, "high",
ifelse(dat$per_vis_min > 25.21 &
dat$per_vis_min <= 63.5, "medium", "low"))
## make variable for assaults per capita in each neighbourhood
dat$assaults_per_cap <- (dat$assaults/dat$total_population)*100
dat$assaults_per_cap <- round(dat$assaults_per_cap, 2)
## explore average income
summary(dat$average_family_income)
hist(dat$average_family_income)
## create categories of income by neighbourhood
dat$cat_avg_income <- ifelse(dat$average_family_income > 92800, "high",
ifelse(dat$average_family_income > 65840 &
dat$average_family_income <= 92800,"medium",
"low"))
###########
###########
###### Map making #######
library(maps)
library(mapdata)
library(maptools) # for shapefiles
library(scales) # for transparency
area <- readShapePoly(file.choose("neighbourhoods.shp"))
library(maps)
library(mapdata)
library(maptools) # for shapefiles
library(scales) # for transparency
area <- readShapePoly(file.choose("neighbourhoods.shp"))
area <- readShapePoly("neighbourhoods.shp")
library(ggplot2)
area <- readShapePoly("neighbourhoods.shp")
getinfo.shape("neighbourhoods.shp")
install.packages("sp", "rgdal")
install.packages("rgdal")
library(rgdal)
swd
?swd
area <- readShapePoly("NEIGHBORHOODS_WGS84.shp")
gor=readShapeSpatial("C:/Users/Xing Chiu/Documents/data_TO/neighbourhoods/NEIGHBOURHOODS_WGS84.shp")
gor=readShapeSpatial("C:/Users/Xing Chiu/Documents/data_TO/neighbourhoods/NEIGHBOURHOODS_WGS84.shp")
gor=readShapeSpatial("~/neighbourhoods/NEIGHBOURHOODS_WGS84.shp")
gor=readShapeSpatial("~/neighbourhoods/NEIGHBOURHOODS_WGS84.shp")
?gor
?readShapeSpatial
neighbourhoods <- readOGR(dsn = "C:/Users/Xing Chiu/Documents/data_TO/neighbourhoods/",
layer = "NEIGHBOURHOODS_WGS84.shp")
neighbourhoods <- readOGR(dsn = "C:/Users/Xing Chiu/Documents/data_TO/neighbourhoods/",
layer = "NEIGHBOURHOODS_WGS84")
neighbourhoods <- readOGR(dsn = ".",layer = "NEIGHBOURHOODS_WGS84")
neighbourhoods <- readOGR(dsn = "neighbourhoods",layer = "NEIGHBOURHOODS_WGS84")
clear
neighbourhoods <- readShapePoints("~/neighbourhoods/NEIGHBOURHOODS_WGS84.shp")
neigh_map <- readOGR(".", "NEIGHBOURHOODS_WGS84")
neigh_map <- readOGR(".", "neighbourhoods")
neigh_map <- readOGR(dsn = ".", layer = "neighbourhoods")
neigh_map <- readOGR(dsn = ".", layer = "neighbourhoods")
getwd()
neigh_map <- readOGR(dsn = "~/neighbourhoods/", layer = "neighbourhoods")
neigh_map <- readOGR(dsn = "C:/Users/Xing Chiu/Documents/data_TO/neighbourhoods/",
layer = "neighbourhoods")
neigh_map <- readOGR(dsn = "C:/Users/Xing Chiu/Documents/data_TO/neighbourhoods",
layer = "neighbourhoods")
require(rgdal)
nm <- readShapePoints("C:/Users/Xing Chiu/Documents/data_TO/neighbourhoods/neighbourhoods.shp")
nm <- readShapePoints("~/neighbourhoods/neighbourhoods.shp")
View(dat)
?plot
plot(dat$per_vis_min, dat$average_family_income)
?"ggplot2
?ggplot2
?"ggplot2"
library(ggplot2)
?"ggplot2"
vis_inc <- ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1)
vis_inc <- ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1)
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1)
rm(vis_inc)
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1) +
geom_smooth(method=lm)
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1) +
scale_colour_hue(l=50) +
geom_smooth(method=lm)
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=2) +
scale_colour_hue(l=50) +
geom_smooth(method=lm) +
xlab(Percentage Visible Minority in Neighbourhood), ylab(Average Family Income)
?xlab
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=2) +
scale_colour_hue(l=50) +
geom_smooth(method=lm) +
xlab("Percentage Visible Minority in Neighbourhood") +
ylab("Average Family Income") +
ggtitle("Relation between percentage of visible minorities and income")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm) +
xlab("Percentage Visible Minority in Neighbourhood") +
ylab("Average Family Income") +
ggtitle("Relation between percentage of visible minorities and income")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm) +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "red") +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "gold") +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
?ylim
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "gold") +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "gold") +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ylim(20000, 300000) +
ggtitle("P
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "gold") +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ylim(20000, 300000) +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "gold") +
ylim(20000, 300000) +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "gold") +
ylim(20000, 400000) +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "gold") +
ylim(20000, 400000) +
options(scipen=10000)+
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "gold") +
ylim(20000, 400000) +
options(scipen=10000) +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "orange") +
ylim(20000, 400000) +
options(scipen=10000) +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "orange") +
ylim(20000, 400000) +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods")
library(scales)
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "orange") +
ylim(20000, 400000) +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods") +
scale_y_continuous(labels = comma)
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "orange") +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of visible minorities vs Income in Toronto Neighbourhoods") +
scale_y_continuous(labels = comma)
ggplot(dat, aes(x=dat$per_vis_min, y=dat$average_family_income)) +
geom_point(shape = 1, alpha=1/4) +
scale_colour_hue(l=50) +
geom_smooth(method=lm, color = "orange") +
xlab("Percentage Visible Minority") +
ylab("Average Family Income") +
ggtitle("Percentage of Visible Minorities vs Family Income by Toronto Neighbourhoods") +
scale_y_continuous(labels = comma)
hist(dat$assaults_per_cap)
summary(dat$assaults_per_cap)
dat$neighbourhood[dat$assaults_per_cap == max(dat$assaults_per_cap)]
dat[dat$neighbourhood == "Bay Street Corridor",]
summary(dat$total_population)
dat$neighbourhood[dat$assaults_per_cap > median(dat$assaults_per_cap)]
dat$neighbourhood[dat$assaults_per_cap > 0.75]
dat$neighbourhood[dat$assaults_per_cap > 1]
dat$neighbourhood[dat$assaults_per_cap > 2]
dat$assaults_per_cap <- (dat$assaults/dat$total_population)
dat$assaults_per_cap <- round(dat$assaults_per_cap, 2)
dat$assaults_per_cap <- round(dat$assaults_per_cap, 4)
dat$assaults_per_cap <- (dat$assaults/dat$total_population)
dat$assaults_per_cap <- round(dat$assaults_per_cap, 4)
View(dat)
hist(dat$assaults_per_cap)
dat$neighbourhood[dat$assaults_per_cap == max(dat$assaults_per_cap)]
per_unemployed <- (dat$unemployed/dat$total_population)*100
per_unemployed <- round(per_unemployed, 2)
View(dat)
dat$per_unemployed <- (dat$unemployed/dat$total_population)*100
dat$per_unemployed <- round(dat$per_unemployed, 2)
rm(per_unemployed)
View(dat)
summary(dat$per_unemployed)
dat$neighbourhood[dat$per_unemployed == max(dat$per_unemployed)]
dat$neighbourhood[dat$per_unemployed == min(dat$per_unemployed)]
dat$neighbourhood[dat$per_unemployed > 4.923]
dat$neighbourhood[dat$per_unemployed > 6]
dat$neighbourhood[dat$per_unemployed < 4]
dat$neighbourhood[dat$per_unemployed < 3]
hist(dat$per_unemployed)
